@model MovieProduct

@{
	ViewData["Title"] = "Seller_Product_Edit";
	Layout = "Seller_Layout";
}


<style>
	* {
		margin: 0;
		box-sizing: border-box;
	}

	body {
		font-family: Arial, Helvetica, sans-serif;
		background-color: #111;
		overflow-x: hidden;
	}

	.row_poster {
		width: 100%;
		object-fit: contain;
		max-height: 100px;
		margin-right: 10px;
		transition: transform 450ms;
	}

		.row_poster:hover {
			transform: scale(1.1);
		}

	.row_posters {
		display: flex;
		overflow-y: hidden;
		overflow-x: scroll;
		padding: 20px;
	}

		.row_posters::-webkit-scrollbar {
			display: none;
		}

	.row_posterLarge {
		max-height: 200px;
	}

	.row {
		color: antiquewhite;
		margin-left: 20px;
	}

	.banner {
		/*background-image: url("https://images.hdqwalls.com/download/lucifer-season-4-4k-tk-3840x2160.jpg");*/
		background-image: url("https://images3.alphacoders.com/680/thumb-1920-680776.png");
		width: 100%;
		background-size: cover;
		background-position: center center;
		object-fit: contain;
		height: 448px;
		color: azure;
		margin-bottom: 2rem;
	}

	.banner_contents {
		background: linear-gradient(90deg,#181818 10%,hsla(0,0%,9%,.98) 20%,hsla(0,0%,9%,.97) 25%,hsla(0,0%,9%,.95) 35%,hsla(0,0%,9%,.94) 40%,hsla(0,0%,9%,.92) 45%,hsla(0,0%,9%,.9) 50%,hsla(0,0%,9%,.87) 55%,hsla(0,0%,9%,.82) 60%,hsla(0,0%,9%,.75) 65%,hsla(0,0%,9%,.63) 70%,hsla(0,0%,9%,.45) 75%,hsla(0,0%,9%,.27) 80%,hsla(0,0%,9%,.15) 85%,hsla(0,0%,9%,.08) 90%,hsla(0,0%,9%,.03) 95%,hsla(0,0%,9%,0));
		padding: 144px;
		height: 100%;
	}

	.banner_title {
		font-size: 3rem;
		font-weight: 800;
		padding-bottom: 0.3rem;
	}

	.banner_discription {
		width: 45rem;
		line-height: 1.3;
		padding-top: 1rem;
		font-size: .8rem;
		max-width: 360px;
		height: 180px;
		display: flex;
		flex-direction: column;
	}

	.banner_button {
		cursor: pointer;
		color: azure;
		outline: none;
		border: none;
		padding-top: .6rem;
		padding-bottom: .4rem;
		margin: .2rem;
		font-weight: 700;
		border-radius: 5px;
		background-color: rgba(51, 51, 51, .5);
	}

		.banner_button:hover {
			color: #000;
			background-color: #e6e6e6;
			transition: all 0.5s;
		}

	.nav2_logo {
		width: 80px;
		object-fit: contain;
		cursor: pointer;
	}

	.nav2_avatar {
		width: 30px;
		object-fit: contain;
		cursor: pointer;
	}

	.nav2 {
		position: fixed;
		top: 0;
		width: 100%;
		display: flex;
		justify-content: space-between;
		padding: 20px;
		z-index: 1;
		transition-timing-function: ease-in;
		transition: all 0.5s;
	}

	.nav2_black {
		background-color: #111;
	}

	a {
		color: azure;
		text-decoration: none;
	}

		a:hover {
			cursor: pointer;
			color: black;
			transition: all 0.5s;
		}

	.Mybackground {
		background-color: #111;
		padding: 0rem;
		padding-bottom: 2rem;
		/*min-height: 100vh;*/
	}

	:root {
		--background-color-gs-product-grid-view: #101827;
		--product-column-gap-gs-product-grid-view: 10px;
		--product-row-gap-gs-product-grid-view: 10px;
		--product-container-padding-product-grid-view: 20px;
		--product-card-color-gs-product-grid-view: #1d283c;
		--product-card-border-radius-gs-product-grid-view: 5px;
		--product-card-content-padding-gs-product-grid-view: 10px;
		--product-card-scale-on-hover-gs-product-grid-view: 1.03;
		--product-card-transition-gs-product-grid-view: 0.3s;
		--product-card-header-color-gs-product-grid-view: white;
		--product-card-header-padding-color-gs-product-grid-view: 20px 0px 10px 0px;
		--product-card-header-font-gs-product-grid-view: 18px;
		--product-card-detail-title-color-gs-product-grid-view: #9da1aa;
		--product-card-detail-font-size-gs-product-grid-view: 13px;
		--product-card-detail-value-color-gs-product-grid-view: white;
		--product-overlay-background-color-gs-product-grid-view: #8080809c;
		--product-overlay-text-color-gs-product-grid-view: white;
		--product-overlay-background-color-hover-gs-product-grid-view: grey;
		--product-card-scrollbar-color-gs-product-grid-view: #0a0f18;
		--product-card-scrollbar-color-hover-gs-product-grid-view: black;
		--product-card-image-height-hover-gs-product-grid-view: 150px;
	}

	* {
		margin: 0;
	}

	.gs-product-grid-view-outer-container {
		/*	background-color: var(--background-color-gs-product-grid-view);*/
		/*min-height: 100vh;*/
		min-height: 20vh;
		width: 100%;
		font-family: 'Poppins';
	}

	.gs-product-grid-view-container {
		align-items: flex-start;
		display: flex;
		justify-content: center;
		padding: var(--product-container-padding-product-grid-view);
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div {
			display: grid;
			grid-template-columns: repeat(1, 1fr);
			grid-column-gap: var(--product-column-gap-gs-product-grid-view);
			grid-row-gap: var(--product-row-gap-gs-product-grid-view);
			max-width: 100%;
			width: 100%;
		}



	@@media only screen and (min-width: 320px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	@@media only screen and (min-width: 540px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div {
			grid-template-columns: repeat(3, 1fr);
		}
	}

	@@media only screen and (min-width: 800px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div {
			grid-template-columns: repeat(4, 1fr);
		}
	}

	@@media only screen and (min-width: 1024px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div {
			grid-template-columns: repeat(5, 1fr);
		}
	}

	@@media only screen and (min-width: 1900px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div {
			grid-template-columns: repeat(6, 1fr);
		}
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card {
		/*width: 100%;*/
		min-width: 260px;
		background-color: var(--product-card-color-gs-product-grid-view);
		min-height: 400px;
		max-height: 400px;
		border-radius: var(--product-card-border-radius-gs-product-grid-view);
		transition: var(--product-card-transition-gs-product-grid-view) ease-in-out;
		display: block;
		text-decoration: none;
		cursor: pointer;
		overflow-y: auto;
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card:hover {
			transform: scale(var(--product-card-scale-on-hover-gs-product-grid-view));
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .nocart {
		display: flex;
		justify-content: center;
		align-items: center;
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .nocart:hover {
			color: white;
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content {
		padding: var(--product-card-content-padding-gs-product-grid-view);
		position: relative;
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-image-container {
		width: 100%;
		height: var(--product-card-image-height-hover-gs-product-grid-view);
		overflow: hidden;
		border-radius: var(--product-card-border-radius-gs-product-grid-view);
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-image-container .gs-product-card-image {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-name {
		color: var(--product-card-header-color-gs-product-grid-view);
		padding: var(--product-card-header-padding-color-gs-product-grid-view);
		font-size: var(--product-card-header-font-gs-product-grid-view);
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail {
		display: flex;
		justify-content: space-between;
		font-size: var(--product-card-detail-font-size-gs-product-grid-view);
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .no {
			color: #59719d;
			background-color: rgba(89, 113, 157, 0.2);
		}

			.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .no:before {
				background-color: #59719d;
			}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .yes {
			color: #2ba972;
			background-color: rgba(43, 169, 114, 0.2);
		}

			.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .yes:before {
				background-color: #2ba972;
			}

	@@media only screen and (min-width: 320px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail {
			display: block;
		}
	}

	@@media only screen and (min-width: 540px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail {
			display: block;
		}
	}

	@@media only screen and (min-width: 800px) {
		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail {
			display: flex;
		}
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .gs-product-card-detail-title {
		color: var(--product-card-detail-title-color-gs-product-grid-view);
		min-width: 50%;
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .gs-product-card-detail-value {
		color: var(--product-card-detail-value-color-gs-product-grid-view);
		min-width: 50%;
		text-align: left;
		display: flex;
		flex-wrap: wrap;
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .mystatus {
		color: var(--product-card-detail-value-color-gs-product-grid-view);
		min-width: 50%;
		text-align: left;
		border-radius: 4px;
		display: flex;
		align-items: center;
		padding: 4px 8px;
		font-size: 12px;
	}


		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-detail .mystatus:before {
			content: 39;
			width: 4px;
			height: 4px;
			border-radius: 50%;
			margin-right: 4px;
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-product-type {
		position: absolute;
		top: calc(var(--product-card-content-padding-gs-product-grid-view) + 2px);
		left: calc(var(--product-card-content-padding-gs-product-grid-view) + 2px);
		padding: 0px 5px;
		background-color: var(--product-overlay-background-color-gs-product-grid-view);
		border-radius: 3px;
		font-size: 10px;
		color: var(--product-overlay-text-color-gs-product-grid-view);
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-product-type:hover {
			background-color: var(--product-overlay-background-color-hover-gs-product-grid-view);
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-save {
		position: absolute;
		top: calc(var(--product-card-content-padding-gs-product-grid-view) + 2px);
		right: calc(var(--product-card-content-padding-gs-product-grid-view) + 2px);
		padding: 0px 5px;
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-save svg {
			fill: var(--product-overlay-background-color-gs-product-grid-view);
			stroke: white;
			stroke-width: 0.5px;
			stroke-linejoin: round;
		}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-save:hover svg {
			fill: var(--product-overlay-background-color-hover-gs-product-grid-view);
		}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-save.gs-saved svg {
			fill: var(--product-card-color-gs-product-grid-view);
		}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card .gs-product-card-content .gs-product-card-save.gs-saved:hover svg {
			fill: var(--background-color-gs-product-grid-view);
		}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card::-webkit-scrollbar {
		width: 5px;
		height: 5px;
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card::-webkit-scrollbar-track {
		background: transparent;
		border-radius: 5px;
	}

	.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card::-webkit-scrollbar-thumb {
		background: var(--product-card-scrollbar-color-gs-product-grid-view);
		border-radius: 5px;
	}

		.gs-product-grid-view-container .gs-product-grid-grid-div .gs-product-card::-webkit-scrollbar-thumb:hover {
			background: var(--product-card-scrollbar-color-hover-gs-product-grid-view);
		}




	.h1 {
		font-weight: bold;
		margin: 0;
	}

	.h2 {
		text-align: center;
	}

	.p {
		font-size: 14px;
		font-weight: 100;
		line-height: 20px;
		letter-spacing: 0.5px;
		margin: 20px 0 30px;
	}

	.span {
		font-size: 12px;
	}

	.a {
		color: #333;
		font-size: 14px;
		text-decoration: none;
		margin: 15px 0;
	}

	.bnm {
		border-radius: 20px;
		border: 1px solid #FF4B2B;
		background-color: #FF4B2B;
		color: #FFFFFF;
		font-size: 12px;
		font-weight: bold;
		padding: 12px 45px;
		letter-spacing: 1px;
		text-transform: uppercase;
		transition: transform 80ms ease-in;
	}

		.bnm:active {
			transform: scale(0.95);
		}

		.bnm:focus {
			outline: none;
		}

		.bnm.ghost {
			background-color: transparent;
			border-color: #FFFFFF;
			transition: all .3s;
			box-shadow: 0 0 20px red, 0 0 60px red;
			margin-bottom: 2rem;
		}

			.bnm.ghost:hover {
				background: red;
				box-shadow: 0 0 20px red, 0 0 60px red;
				border-color: red;
			}

	.form {
		background-color: #FFFFFF;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		padding: 0 50px;
		height: 100%;
		text-align: center;
	}

	input, textarea {
		background-color: #eee;
		border: 2px solid white;
		padding: 8px 15px;
		margin: 3px 0;
		width: 100%;
	}

		input, textarea:focus {
			outline: none;
		}

	.mybody {
		display: flex;
		justify-content: center;
		align-items: center;
		background: #111;
		margin-bottom: 2rem;
	}

	.container_my {
		border-radius: 10px;
		box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
		position: relative;
		overflow: hidden;
		/*width: 768px;*/
		width: 90%;
		max-width: 100%;
		/*	min-height: 480px;*/
		min-height: 640px;
		display: flex;
		flex-direction: column;
	}

	.form-container {
		position: absolute;
		top: 0;
		height: 100%;
		transition: all 0.6s ease-in-out;
	}

	.sign-in-container {
		/*left: 0;*/
		width: 60%;
		z-index: 2;
	}

	.container_my.right-panel-active .sign-in-container {
		transform: translateX(100%);
	}

	.sign-up-container {
		left: 0;
		width: 60%;
		opacity: 0;
		z-index: 1;
	}

	.container_my.right-panel-active .sign-up-container {
		transform: translateX(100%);
		opacity: 1;
		z-index: 5;
		animation: show 0.6s;
	}

	@@keyframes show {
		0%, 49.99% {
			opacity: 0;
			z-index: 1;
		}

		50%, 100% {
			opacity: 1;
			z-index: 5;
		}
	}

	.overlay-container {
		position: absolute;
		top: 0;
		left: 60%;
		width: 40%;
		/*width: 80%;*/
		height: 100%;
		overflow: hidden;
		transition: transform 0.6s ease-in-out;
		z-index: 100;
	}

	.container_my.right-panel-active .overlay-container {
		transform: translateX(-100%);
	}

	.overlay {
		background: #FF416C;
		background: -webkit-linear-gradient(to right, #FF4B2B, #FF416C);
		background: linear-gradient(to right, #FF4B2B, #FF416C);
		background-repeat: no-repeat;
		background-size: cover;
		background-position: 0 0;
		color: #FFFFFF;
		position: relative;
		left: -100%;
		height: 100%;
		width: 200%;
		transform: translateX(0);
		transition: transform 0.6s ease-in-out;
	}

	.container_my.right-panel-active .overlay {
		transform: translateX(50%);
	}

	.overlay-panel {
		position: absolute;
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		padding: 0 40px;
		text-align: center;
		top: 0;
		height: 100%;
		width: 50%;
		transform: translateX(0);
		transition: transform 0.6s ease-in-out;
	}

	.overlay-left {
		transform: translateX(-20%);
	}

	.container_my.right-panel-active .overlay-left {
		transform: translateX(0);
	}

	.overlay-right {
		/* background-image: url("https://i.redd.it/eu8xvl5ija681.gif"); */
		/*   background-image: url("https://c.tenor.com/MROdIU1c3PIAAAAd/ichigo-kurosaki-getsuga.gif"); */
		background-image: url("https://giffiles.alphacoders.com/150/15011.gif");
		right: 0;
		background-size: cover;
		background-position: center center;
		object-fit: contain;
		transform: translateX(0);
	}

	.container_my.right-panel-active .overlay-right {
		transform: translateX(20%);
	}

	.social-container {
		margin: 20px 0;
	}

		.social-container a {
			border: 1px solid #DDDDDD;
			border-radius: 50%;
			display: inline-flex;
			justify-content: center;
			align-items: center;
			margin: 0 5px;
			height: 40px;
			width: 40px;
		}

	.myselect {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
	}

	.control-group {
		display: inline-block;
		vertical-align: top;
		background: #fff;
		text-align: left;
		box-shadow: 0 1px 2px rgba(0,0,0,0.1);
		padding: 30px;
		width: 200px;
		height: 210px;
		margin: 10px;
	}

	.control {
		display: block;
		position: relative;
		padding-left: 30px;
		margin-bottom: 15px;
		cursor: pointer;
		font-size: 18px;
	}

		.control input {
			position: absolute;
			z-index: -1;
			opacity: 0;
		}

	.control__indicator {
		position: absolute;
		top: 2px;
		left: 0;
		height: 20px;
		width: 20px;
		background: #e6e6e6;
	}

	.control--radio .control__indicator {
		border-radius: 50%;
	}

	.control:hover input ~ .control__indicator,
	.control input:focus ~ .control__indicator {
		background: #ccc;
	}

	.control input:checked ~ .control__indicator {
		background: #2aa1c0;
	}

	.control:hover input:not([disabled]):checked ~ .control__indicator,
	.control input:checked:focus ~ .control__indicator {
		background: #0e647d;
	}

	.control input:disabled ~ .control__indicator {
		background: #e6e6e6;
		opacity: 0.6;
		pointer-events: none;
	}

	.control__indicator:after {
		content: '';
		position: absolute;
		display: none;
	}

	.control input:checked ~ .control__indicator:after {
		display: block;
	}

	.control--checkbox {
		margin-right: 0.5rem;
	}

		.control--checkbox .control__indicator:after {
			left: 8px;
			top: 4px;
			width: 3px;
			height: 8px;
			border: solid #fff;
			border-width: 0 2px 2px 0;
			transform: rotate(45deg);
		}

		.control--checkbox input:disabled ~ .control__indicator:after {
			border-color: #7b7b7b;
		}

	.control--radio .control__indicator:after {
		left: 7px;
		top: 7px;
		height: 6px;
		width: 6px;
		border-radius: 50%;
		background: #fff;
	}

	.control--radio input:disabled ~ .control__indicator:after {
		background: #7b7b7b;
	}

	:root {
		--background-gradient: linear-gradient(30deg, #f39c12 30%, #f1c40f);
		--gray: #34495e;
		--darkgray: #2c3e50;
	}

	select {
		/* Reset Select */
		appearance: none;
		outline: 0;
		border: 0;
		box-shadow: none;
		/* Personalize */
		flex: 1;
		padding: 0 1em;
		color: #fff;
		background-color: var(--darkgray);
		background-image: none;
		cursor: pointer;
	}
		/* Remove IE arrow */
		select::-ms-expand {
			display: none;
		}
	/* Custom Select wrapper */
	.select {
		position: relative;
		display: flex;
		/*width: 10em;*/
		width: 100%;
		height: 2.5em;
		border-radius: .25em;
		overflow: hidden;
	}
		/* Arrow */
		.select::after {
			content: '\25BC';
			position: absolute;
			top: 0;
			right: 0;
			padding: 0.5em;
			background-color: #34495e;
			transition: .25s all ease;
			pointer-events: none;
		}
		/* Transition */
		.select:hover::after {
			color: #f39c12;
		}

	.Mybackground .row .myimg {
		position: relative;
		font-size: 0.8rem;
		margin: 1rem auto;
		width: 60%;
		height: 400px;
		border: 2px solid black;
		object-fit: cover;
		background-size: cover;
		background: transparent;
	}

		.Mybackground .row .myimg #img {
			position: absolute;
			z-index: 20;
			width: 100%;
			height: 100%;
			border-radius: 5px;
			background: red;
			border: none;
			cursor: pointer;
		}

		.Mybackground .row .myimg #sub {
			position: absolute;
			margin-top: 150px;
			margin-left: 5px;
			padding: 8px 20px;
			border-radius: 10px;
			transition: all 0.3s;
			font-weight: 600;
		}

			.Mybackground .row .myimg #sub:hover {
				box-shadow: 0 0 20px lightcoral, 0 0 60px lightcoral;
			}

		.Mybackground .row .myimg #myIcon {
			position: absolute;
			z-index: 30;
			opacity: 0;
			border: none;
			cursor: pointer;
			background: transparent;
		}

	.flex {
		display: flex;
		flex-direction: column;
	}













	button:focus,
	input:focus {
		outline: none;
		box-shadow: none;
	}

	a,
	a:hover {
		text-decoration: none;
	}

	body {
		font-family: 'Roboto', sans-serif;
	}

	/* ---------------------- */
	.imagePreview {
		width: 150px;
		height: 150px;
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
		margin-right: 0;
		position: absolute;
		background-color: #fff;
		top: 0;
		left: 0;
	}

	.file-upload {
		display: inline-block;
		margin-right: 1rem;
		margin-bottom: 2rem;
	}

	.file-select {
		position: relative;
		overflow: hidden;
		display: flex;
		align-items: center;
	}

		.file-select.file-select-box {
			width: 150px;
			height: 150px;
			display: inline-block;
			border-radius: 14px;
			background: red;
		}

		.file-select .image {
			width: 150px;
			height: 150px;
			background-size: cover;
			background-position: center;
			background-repeat: no-repeat;
		}

	.file-upload-custom-btn {
		width: 100%;
		height: 150px;
		border: none;
		background-color: #ed192412;
		color: #ed1924;
		font-size: 30px;
		z-index: 1;
		position: relative;
	}

	.file-select-name {
		margin-left: 15px;
	}

	.file-select input[type=file] {
		position: absolute;
		left: 0;
		top: 0;
		opacity: 0;
		width: 100%;
		height: 100%;
	}

	.file-select.file-select-box input[type=file] {
		z-index: 2;
	}

	.file-upload + .file-upload {
		margin-left: 10px;
	}

	.Myauto {
		display: flex;
		justify-content: center;
		align-items: center;
		margin: 1rem auto;
	}

</style>


<form action="~/Seller/Edit_Post" enctype="multipart/form-data" method="post">
	<div class="Mybackground">

		<!-- nav2igation section -->
		<div class="nav2" id="nav2">
			<img src="https://i.postimg.cc/fTPcTRWQ/netflix-logo.png" alt="" class="nav2_logo">
			<img src="https://i.postimg.cc/Fszb4L4x/netflix-avatar.png" alt="" class="nav2_avatar">
		</div>
		<!-- banner section -->
		<div class="banner">
			<div class="banner_contents">
				<h1 class="banner-title">Edit / Delete Product</h1>
				<div class="banner_discription">
					2022 || 7 || Create By Hoo | <a>Fantasy TV Shows</a>
					<br>
					You can delete or modify products here
					<br><br>
				</div>
			</div>

		</div>

		<!-- Netflix Originals section -->
		<div class="row flex">
			<h2>NETFLIX PRODUCT</h2>
			<div class="myimg">
				@{
					var mimg = @Model.MovieImg;
					string m = mimg.Remove(0, mimg.Length - 5);
				}
				@if (m.Contains(".jpg") || m.Contains(".webp") || m.Contains(".jpeg") || m.Contains(".png"))
				{
					<input id="myIcon" type="file" name="file1" onchange="chooseImg(this)">
					<img id="img" src="~/Image/MovieImg/@Model.MovieImg" onclick="myIcon.click()">
				}
				else
				{
					<input id="myIcon" type="file" name="file1" onchange="chooseImg(this)">
					<img id="img" src="@Model.MovieImg" onclick="myIcon.click()">
				}


			</div>

			<section class="bg-diffrent">
				<div class="container">
					<div class="row">
						<div class="col-md-12 m-auto Myauto" style="margin:0 auto;">
							@{
								string[] s = Model.ImgList.Split('|');
							}

							@if (@s.Count() == 1)
							{

								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file2" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file3" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file4" class="profileimg">
									</div>
								</div>

							}
							else if (@s.Count() == 2)
							{

								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[1]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file2" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file3" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file4" class="profileimg">
									</div>
								</div>


							}
							else if (@s.Count() == 3)
							{
								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[1]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file2" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[2]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file3" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<div class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file4" class="profileimg">
									</div>
								</div>


							}
							else if (@s.Count() == 4)
							{
								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[1]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file2" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[2]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file3" class="profileimg">
									</div>
								</div>
								<div class="file-upload">
									<div class="file-select file-select-box">
										<h1 style="z-index:10000;color:white;"></h1>
										<div style="background-image:url('/Image/MovieImg/@s[3]');z-index:2;" class="imagePreview"></div>
										<button class="file-upload-custom-btn"><i class="fa fa-plus"></i></button>
										<input type="file" name="file4" class="profileimg">
									</div>
								</div>


							}

						</div>
					</div>
				</div>
			</section>


		</div>


		<div class="mybody">
			<div class="container_my" id="container">

				<div class="form-container sign-in-container">
					<div class="form">
						<input type="text" id="Mid" disabled value="@Model.Movie_ID" />
						<input type="text" placeholder="Movie Name" maxlength="20" id="MName" value="@Model.MovieName" name="MovieName" />
						<textarea placeholder="Movie Introduction" maxlength="350" cols="30" rows="0" id="Minfo" name="MovieInfo">@Model.MovieInfo</textarea>
						<input type="number" min="0" max="10000" placeholder="Original Price" id="Moprice" value="@Model.MovieDelPrice" name="MovieDelPrice" />
						<input type="number" min="0" max="10000" placeholder="Price" id="Mprice" value="@Model.MoviePrice" name="MoviePrice" />
						<input type="number" min="1" max="50" placeholder="Quantity" id="Mquan" value="@Model.Quantity" name="Quantity" />
						<input type="text" placeholder="Movie Youtube Link" id="MYoutube" value="@ViewBag.Video" name="Video" />
						@if (@Model.IsInstallmentProduct == true)
						{
							<div class="select">
								<select id="selectedIns" name="IsInstallmentProduct">
									<option value="false">normal</option>
									<option value="true" selected>Installmeng</option>
								</select>
							</div>

						}
						else
						{
							<div class="select">
								<select id="selectedIns" name="IsInstallmentProduct">
									<option value="false" selected>normal</option>
									<option value="true">Installmeng</option>
								</select>
							</div>
						}
						<p style="font-weight:bold;margin-top:1rem"><i class="fa-solid fa-triangle-exclamation" style="color:red"></i> Category <i class="fa-solid fa-triangle-exclamation" style="color:red"></i></p>
						<div class="myselect">
							<label class="control control--checkbox">
								Anime
								<input type="checkbox" value="Anime" id="Anime" />
								<div class="control__indicator"></div>
							</label>
							<label class="control control--checkbox">
								Action
								<input type="checkbox" value="Action" id="Action" />
								<div class="control__indicator"></div>
							</label>
							<label class="control control--checkbox">
								Comedy
								<input type="checkbox" value="Comedy" id="Comedy" />
								<div class="control__indicator"></div>
							</label>
							<label class="control control--checkbox">
								Drama
								<input type="checkbox" value="Drama" id="Drama" />
								<div class="control__indicator"></div>
							</label>
							<label class="control control--checkbox">
								History
								<input type="checkbox" value="History" id="History" />
								<div class="control__indicator"></div>
							</label>
							<label class="control control--checkbox">
								Thriller
								<input type="checkbox" value="Thriller" id="Thriller" />
								<div class="control__indicator"></div>
							</label>
						</div>
					</div>
				</div>

				<div class="overlay-container">
					<div class="overlay">
						<div class="overlay-panel overlay-left">
							<h1 class="h1">Welcome Back!</h1>
							<p class="p">To keep connected with us please login with your personal info</p>
							<button class="ghost bnm" id="signIn">Sign In</button>
						</div>
						<div class="overlay-panel overlay-right">
							<button type="submit" class="ghost bnm done" id="Edit">Edit</button>
							<button class="ghost bnm done" id="Delete" value="@Model.Movie_ID">Delete</button>
						</div>
					</div>
				</div>

				<h1 id="Category" style="display:none;">@Model.Category</h1>
				<input type="text" name="Category" id="CC" style="display:none;" />
				<input type="text" name="Movie_ID" style="display:none;" value="@Model.Movie_ID" />
			</div>
		</div>

	</div>
</form>

@*<p id="saa"></p>*@

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>


	var Mname = true;
	var Minfo = true;
	var Moprice = true;
	var Mprice = true;
	var Mquan = true;
	var http = true;
	var Yout = true;
	var List = "";


	//$(".allmovie").css({
	//	"background":"red",
	//	"border-radius":"5px",
	//	"color":"white"
	//});



	$(function(){

		$("#Delete").click(function(){
			$.ajax({
				type:"POST",
				url:"/Ajax/Master_Del_Product",
				dataType:"json",
				data:{
					Movie_ID:$(this).val()
				},
				success:function(data){
					if(data == true){
						window.location.href="/Loading/Loading_Login_Seller_Product";
					}
				}
			})
		})

		List = $("#Category").html()+ ", ";
		console.log(List)
		$("#CC").val(List)
		var n = List.split(", ");
		if(n.includes('Anime')){
			$("#Anime").prop("checked",true)
		}
		if(n.includes('Action')){
			$("#Action").prop("checked",true)
		}
		if(n.includes('Comedy')){
			$("#Comedy").prop("checked",true)
		}
		if(n.includes('Drama')){
			$("#Drama").prop("checked",true)
		}
		if(n.includes('History')){
			$("#History").prop("checked",true)
		}
		if(n.includes('Thriller')){
			$("#Thriller").prop("checked",true)
		}

		$("#MName").keyup(function(){
			console.log(List)
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				Mname = false;
			}else{
				$(this).css("border","2px solid green")
				Mname = true;
			}
			Ck()
			//$("#saa").html(List)
			//console.log("Mname "+Mname )
			//console.log("Minfo "+Minfo )
			//console.log("Moprice "+Moprice )
			//console.log("Mprice "+Mprice )
			//console.log("Mquan "+Mquan )
			//console.log("http "+http )
		})

		$("#Minfo").keyup(function(){
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				Minfo = false;
			}else{
				$(this).css("border","2px solid green")
				Minfo = true;
			}
			Ck()
		})

		$("#Moprice").keyup(function(){
			var n1 = $("#Moprice").val();
			var m1 = parseInt(n1)
			var n2 = $("#Mprice").val();
			var m2 = parseInt(n2)
			if($(this).val() == "" ){
				$(this).css("border","2px solid red")
				Moprice = false;
			}else if(m1 < m2){
				$(this).css("border","2px solid red")
				Moprice = false;
			}
			else{
				$(this).css("border","2px solid green")
				Moprice = true;
			}
			Ck()
		})

		$("#Mprice").keyup(function(){
			var n1 = $("#Moprice").val();
			var m1 = parseInt(n1)
			var n2 = $("#Mprice").val();
			var m2 = parseInt(n2)
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				Mprice = false;
			}else if(m1 < m2){
				$(this).css("border","2px solid red")
				Mprice = false;
			}else{
				$(this).css("border","2px solid green")
				Mprice = true;
			}
			Ck()
		})

		$("#Mquan").keyup(function(){
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				Mquan = false;
			}else{
				$(this).css("border","2px solid green")
				Mquan = true;
			}
			Ck()
		})

		$("#http").keyup(function(){
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				http = false;
			}else{
				$(this).css("border","2px solid green")
				http = true;
			}
			Ck()
		})

		$("#MYoutube").keyup(function(){
			var x = $(this).val();
			if($(this).val() == ""){
				$(this).css("border","2px solid red")
				Yout = false;
			}else{
				if(x.includes("https://www.youtube.com/embed"))
				{
					$(this).css("border","2px solid green")
					Yout = true;
				}
				else
				{
					$(this).css("border","2px solid red")
					Yout = false;
				}
			}
			Ck()
		})

		$("#Anime").change(function(){
			var x = document.getElementById("Anime")
			if(x.checked){
				$("#Anime").prop("checked",true)
				List += $("#Anime").val() + ", ";
			}else{
				$("#Anime").prop("checked",false)
				List = List.replace("Anime, ","");
			}
			Ck()
		})

		$("#Action").change(function(){
			var x = document.getElementById("Action")
			if(x.checked){
				$("#Action").prop("checked",true)
				List += $("#Action").val() + ", ";
			}else{
				$("#Action").prop("checked",false)
				List = List.replace("Action, ","");
			}
			Ck()
		})

		$("#Comedy").change(function(){
			var x = document.getElementById("Comedy")
			if(x.checked){
				$("#Comedy").prop("checked",true)
				List += $("#Comedy").val() + ", ";
			}else{
				$("#Comedy").prop("checked",false)
				List = List.replace("Comedy, ","");
			}
			Ck()
		})

		$("#Drama").change(function(){
			var x = document.getElementById("Drama")
			if(x.checked){
				$("#Drama").prop("checked",true)
				List += $("#Drama").val() + ", ";
			}else{
				$("#Drama").prop("checked",false)
				List = List.replace("Drama, ","");
			}
			Ck()
		})

		$("#History").change(function(){
			var x = document.getElementById("History")
			if(x.checked){
				$("#History").prop("checked",true)
				List += $("#History").val() + ", ";
			}else{
				$("#History").prop("checked",false)
				List = List.replace("History, ","");
			}
			Ck()
		})

		$("#Thriller").change(function(){
			var x = document.getElementById("Thriller")
			if(x.checked){
				$("#Thriller").prop("checked",true)
				List += $("#Thriller").val() + ", ";
			}else{
				$("#Thriller").prop("checked",false)
				List = List.replace("Thriller, ","");
			}
			Ck()
		})

		$("#Done").click(function(){
			$.ajax({
				type:"POST",
				url:"/Ajax/Seller_Create_Product",
				dataType:"json",
				data:{
					Movie_ID:$("#Mid").val(),
					MovieImg:$("#http").val(),
					MovieName:$("#MName").val(),
					MovieInfo:$("#Minfo").val(),
					MoviePrice:$("#Mprice").val(),//低
					MovieDelPrice:$("#Moprice").val(),//原本高
					IsInstallmentProduct:$("#selectedIns").val(),
					Quantity:$("#Mquan").val(),
					Category:List,
					Video:$("#MYoutube").val()
				},
				success:function(data){
					if(data == true){
						window.location.href="/Loading/Loading_Login_Seller_AddSuccess";
					}
				}
			})
		})


	})

	function Ck(){
		if(Mname == false || Minfo == false || Moprice == false || Mprice == false || Mquan == false
			|| http == false || Yout == false || List == "")
		{
			$("#Edit").prop("disabled",true);
			$("#CC").val(List)
		}
		else if(Mname == true && Minfo == true && Moprice == true && Mprice == true && Mquan == true &&
			http == true && Yout == true && List != "")
		{
			$("#Edit").prop("disabled",false);
			$("#CC").val(List)
		}
	}

	function chooseImg(file){
		var file = file.files[0]

		var reader = new FileReader();

		reader.readAsDataURL(file);

		reader.onload = function(){
			var img = document.getElementById("img");
			img.src = this.result;
		};
	}

		// -------------file-selection-with-image-and-name------------
	$(document).ready(function() {
		$(document).on('change', '.file-upload input[type="file"]', function() {
				var filename = $(this).val();
				if (/^\s*$/.test(filename)) {
						$(this).parents(".file-upload").removeClass('active');
						$(this).parents(".file-upload").find(".file-select-name").text("No file chosen...");
				} else {
						$(this).parents(".file-upload").addClass('active');
						$(this).parents(".file-upload").find(".file-select-name").text(filename.substring(filename.lastIndexOf("\\") + 1, filename.length));
				}
				var uploadFile = $(this);
				var files = !!this.files ? this.files : [];
				if (!files.length || !window.FileReader) return; // no file selected, or no FileReader support

				if (/^image/.test(files[0].type)) { // only image file
						var reader = new FileReader(); // instance of the FileReader
						reader.readAsDataURL(files[0]); // read the local file

						reader.onloadend = function() { // set image data as background of div
								uploadFile.closest(".file-upload").find('.imagePreview').css({"background-image": "url(" + this.result + ")", "z-index": "2"});
						}
				}
		});
	});

</script>

